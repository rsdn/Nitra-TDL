using DotNet;
using DotNet.AstUtils;

using Nitra;
using Nitra.Declarations;

namespace Tdl
{
  declaration Field : BindableAst, SelfTypedDeclaration, CustomAttributeHostDeclaration
  {
    symbol
    {
      in DeclaredIn         : DeclarationSymbol;
      in Value              : ValueOption[Tdl.Expr];
    stage 3:
      in IsDashboardVisible : bool;

      Kind          = "field";
      SpanClass     = TdlLang.FieldSpanClass;
      DeclaredInOpt = VSome(DeclaredIn);
    }

    Type.Scope                = Scope;
    Value.Scope               = Scope;
    TypeRef                   = Type.Ref.Resolve();
    Symbol.DeclaredIn         = ContainingTable.Owner;
    Symbol.Value              = Value.Result;
    Symbol.IsDashboardVisible = TdlUtils.HasDashboardVisible(Attributes);
    Value.ExpectedType        = Symbol.Type;

    Type  : QualifiedReference;
    Value : DefExpr?;

    SetDeployerPath(Symbol, Symbol.DeclaredIn, Attributes.Symbol, context);
  }
}
