scenario UpgradeProductWithSaveSettingsAndDownloaderIni // E: Scenario must have at least one test method
{
    deployment "Install base product and copy target distributive";
    environments (all_pc_and_servers, KAV-KIS-PURE-KSOS-KSOSFS);
    sequence
    {
    }
    UniqueId = "A83B33B3-3D96-4C5D-B5DC-0F4E5670F7E3";
    RevertAgentBefore = true;
    Timeout = "01:00:00";
    Area = "MockTests";
    TfsId = 739871;
}

suite "Ksos.BvtPvt.UCP-Beta-1" : SessionParameters // E: Variable: "BaseProductType" not set. And the "Copy New Product Version" select deployment has no not-set entry.
{
    platform all_pc;
    product KSOS;
    ExcludeMasks = "*.iso,*.vhd,*_full.exe";
    DistribFiles = DistribFiles;
    DistribTestModules = DistribTestModules;
    UcpContextType = "Beta";
    UpgradeProductWithSaveSettingsAndDownloaderIni();
}


suite "Ksos.BvtPvt.UCP-Beta-2" : SessionParameters
{
    platform all_pc;
    product KSOS;
    ExcludeMasks = "*.iso,*.vhd,*_full.exe";
    DistribFiles = DistribFiles;
    DistribTestModules = DistribTestModules;
    UcpContextType = "Beta";
    BaseProductType = CollectXPerfLog; // There are no reports of incomplete select deployments because an external variable is used.
    UpgradeProductWithSaveSettingsAndDownloaderIni();
}

suite "Ksos.BvtPvt.UCP-Beta-3" : SessionParameters // E: The "Copy New Product Version" select deployment has no "sss" entry.
{
    platform all_pc;
    product KSOS;
    ExcludeMasks = "*.iso,*.vhd,*_full.exe";
    DistribFiles = DistribFiles;
    DistribTestModules = DistribTestModules;
    UcpContextType = "Beta";
    BaseProductType = "sss"; // E: The "Copy New Product Version" select statement does not contain a "sss" value.
    UpgradeProductWithSaveSettingsAndDownloaderIni();
}

deployment "Install base product and copy target distributive" = 
    "Copy New Product Version";

select deployment "Copy New Product Version"(BaseProductType)
{
    | "SameProduct"     => Curry1
    | "NextProduct"     => Curry2
    | "PreviousProduct" => Curry3
}
deployment Basic(string Message = "defuault msg", string UcpContextType)
  script "a.ps1"
{
}
deployment Curry1 = Basic(Message: "111");
deployment Curry2 = Basic(Message: "222");
deployment Curry3 = Basic(Message: "333");

product KSOS : Kavkis
{
    Name = "KSOS";
    BranchName = "Main";
    Version = ProductVersion;
    AutotestBinariesExcludedFilesMasks = "ksm*.Product.Config;ksde*.Product.Config";
    ProductBinariesExcludedFilesMasks = "*_full.exe;*_reduced.exe";
    ConfigFilesFamily = "Kis.";
    TestAppPackName = "KasperskyLab.Kis.UI.TestApp.zip";
    DumpServerProduct = DumpServerProduct;
}

product KAV-KIS-PURE-KSOS-KSOSFS : Kavkis = KSOS;

product type Kavkis
{
    string Name;
    string BranchName;
    string Version;
    string AutotestBinariesExcludedFilesMasks;
    string ProductBinariesExcludedFilesMasks;
    string ConfigFilesFamily;
    string TestAppPackName;
    string DumpServerProduct;
}

platform all_pc_and_servers = all_pc;
platform w10rs5-x86;
platform all_pc = w10rs5-x86;

external
{
  string ProductVersion;
  string DistribFiles;
  string DistribTestModules;
  string AutotestsBinariesPath;
  string ProductBasesPath;
  string BaseDistribFiles;
  string BaseDistribTestModules;
  string UpdateSource;
  string BasesVersion;
  string LocalTestBinariesFolder = @"C:\AutotestBinaries";
  string DeployerExePath = @"C:\AutotestBinaries\Autotests.Deployer.exe";
  string DumpServerProduct = "KAV.21.0.0.0";
  string CollectXPerfLog = "Disable";
}

suite type SessionParameters
{
    string DistribFiles;
    string DistribTestModules;
    string AutotestsBinariesPath;
    string ExcludeMasks;
    string BaseDistribFiles;
    string BaseDistribTestModules;
    string CollectXPerfLog = CollectXPerfLog;
}