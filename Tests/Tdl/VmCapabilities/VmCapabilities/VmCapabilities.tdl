vm capability Cap1;
vm capability Cap2 = VmCapability.Required;
vm capability Cap3 = VmCapability.Acceptable;
vm capability Cap4;

scenario Scenario1
{
  deployment Empty;
  environments (Platform, Product);
  vstest @"bin\test.dll" filter @"Name~abc";
  UniqueId = "E5FF1D95-5BD3-4DAE-ACDA-ABFCFCF1DFEA";
  Timeout = "00:10";
  Cap1 = VmCapability.Unacceptable;
  Cap2 = VmCapability.Required;
  Cap3 = VmCapability.Acceptable;
}

scenario Scenario2 =
  from x in [VmCapability.Required, VmCapability.Unacceptable, VmCapability.Acceptable]
  select
  {
    deployment Empty;
    environments (Platform, Product);
    vstest @"bin\test.dll" filter @"Name~abc";
    UniqueId = "E5FF1D95-5BD3-4DAE-ACDA-ABFCFCF1DFEB";
    Timeout = "00:10";
    Cap1 = x;
  };

suite Suite1
{
  platform Platform;
  product Product;
  Cap4 = VmCapability.Acceptable;
  Scenario1();
  Scenario2();
}

suite Suite2 =
  from x in [VmCapability.Unacceptable, VmCapability.Required]
  select
  {
    platform Platform;
    product Product;
    Cap4 = x;
    Scenario1();
    Scenario2();
  };

product type ProductType
{
  string Name = "Product 1";
  string Version = "1.0";
}

product Product : ProductType
{
  Cap1 = VmCapability.Acceptable;
}

platform Platform;

